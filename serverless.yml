service: auth-service

plugins:
  - serverless-esbuild

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: sa-east-1
  environment:
    AUTH0_PUBLIC_KEY: ${file(secret.pem)}

functions:
  auth:
    handler: src/handlers/auth.handler
    cors: true
  publicEndpoint:
    handler: src/handlers/http/public.handler
    events:
      - http:
          path: public
          method: POST
          cors: true
  privateEndpoint:
    handler: src/handlers/http/private.handler
    events:
      - http:
          path: private
          method: POST
          autorizer: auth
          cors: true

resources:
  Resources:
    # This response is needed for custom authorizer failures cors support ¯\_(ツ)_/¯
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
    AuthFailureGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: node16
    define:
      require.resolver: undefined
    platform: node
    concurrency: 10
